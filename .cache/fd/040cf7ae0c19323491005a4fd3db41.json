{"id":"../node_modules/jsonfile/utils.js","dependencies":[{"name":"C:\\Users\\welis\\OneDrive\\Documentos\\Projetos\\Phaser\\testEnv_phaser\\package.json","includedInParent":true,"mtime":1717997852688},{"name":"C:\\Users\\welis\\OneDrive\\Documentos\\Projetos\\Phaser\\testEnv_phaser\\node_modules\\jsonfile\\package.json","includedInParent":true,"mtime":1717997852551},{"name":"buffer","parent":"C:\\Users\\welis\\OneDrive\\Documentos\\Projetos\\Phaser\\testEnv_phaser\\node_modules\\jsonfile\\utils.js","resolved":"C:\\Users\\welis\\OneDrive\\Documentos\\Projetos\\Phaser\\testEnv_phaser\\node_modules\\buffer\\index.js"}],"generated":{"js":"var Buffer = require(\"buffer\").Buffer;\nfunction stringify (obj, { EOL = '\\n', finalEOL = true, replacer = null, spaces } = {}) {\n  const EOF = finalEOL ? EOL : ''\n  const str = JSON.stringify(obj, replacer, spaces)\n\n  return str.replace(/\\n/g, EOL) + EOF\n}\n\nfunction stripBom (content) {\n  // we do this because JSON.parse would convert it to a utf8 string if encoding wasn't specified\n  if (Buffer.isBuffer(content)) content = content.toString('utf8')\n  return content.replace(/^\\uFEFF/, '')\n}\n\nmodule.exports = { stringify, stripBom }\n"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/jsonfile/utils.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/jsonfile/utils.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/jsonfile/utils.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/jsonfile/utils.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/jsonfile/utils.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/jsonfile/utils.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/jsonfile/utils.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/jsonfile/utils.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/jsonfile/utils.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/jsonfile/utils.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/jsonfile/utils.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/jsonfile/utils.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/jsonfile/utils.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/jsonfile/utils.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/jsonfile/utils.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}}],"sources":{"../node_modules/jsonfile/utils.js":"function stringify (obj, { EOL = '\\n', finalEOL = true, replacer = null, spaces } = {}) {\n  const EOF = finalEOL ? EOL : ''\n  const str = JSON.stringify(obj, replacer, spaces)\n\n  return str.replace(/\\n/g, EOL) + EOF\n}\n\nfunction stripBom (content) {\n  // we do this because JSON.parse would convert it to a utf8 string if encoding wasn't specified\n  if (Buffer.isBuffer(content)) content = content.toString('utf8')\n  return content.replace(/^\\uFEFF/, '')\n}\n\nmodule.exports = { stringify, stripBom }\n"},"lineCount":16}},"error":null,"hash":"ccf8adabdf769ed25eee05dd22eb69e6","cacheData":{"env":{}}}